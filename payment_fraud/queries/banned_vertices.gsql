DROP QUERY banned_vertices

CREATE DISTRIBUTED QUERY banned_vertices(int hops, string path) FOR GRAPH payment_fraud { 
  /*
  The number of normal/banned devices/accounts/transactions in given number of hops for each vertex.
  */ 
  
  SetAccum<int> @normal_accounts;
  SetAccum<int> @banned_accounts;
  SetAccum<int> @normal_devices;
  SetAccum<int> @banned_devices;
  SetAccum<int> @normal_transactions;
  SetAccum<int> @banned_transactions;
  
  FILE f (path);
  f.println("id", "normal_accounts", "banned_accounts", "normal_devices",
            "banned_devices", "normal_transactions", "banned_transactions");
  
  // Initialize set accumulators to include vertex itself if applicable
  Start = {ANY};
  Start = SELECT s
          FROM Start:s
          POST-ACCUM
            IF s.type == "Account" THEN
              IF s.banned == true THEN
                s.@banned_accounts += s.id
              ELSE
                s.@normal_accounts += s.id
              END
            ELSE IF s.type == "Device" THEN
              IF s.banned == true THEN
                s.@banned_devices += s.id
              ELSE
                s.@normal_devices += s.id
              END
            ELSE IF s.type == "Transaction" THEN
              IF s.banned == true THEN
                s.@banned_transactions += s.id
              ELSE
                s.@normal_transactions += s.id
              END
            END;
  
  // Propogate set accumulators based on number of hops
  FOREACH i IN RANGE[1, hops] DO
    Start = SELECT d
            FROM Start:s-(:e)-:d
            ACCUM
              d.@normal_accounts += s.@normal_accounts,
              d.@banned_accounts += s.@banned_accounts,
              d.@normal_devices += s.@normal_devices,
              d.@banned_devices += s.@banned_devices,
              d.@normal_transactions += s.@normal_transactions,
              d.@banned_transactions += s.@banned_transactions;
  END;
  
  // Write the sizes of the set accumulators to the output file
  Start = {Account.*};
  Start = SELECT s
          FROM Start:s
          POST-ACCUM
            IF s.type == "Account" THEN
              s.@normal_accounts.remove(s.id),
              s.@banned_accounts.remove(s.id)
            END,
            f.println(s.id, s.@normal_accounts.size(), s.@banned_accounts.size(), s.@normal_devices.size(),
            s.@banned_devices.size(), s.@normal_transactions.size(), s.@banned_transactions.size());
}

INSTALL QUERY banned_vertices
RUN QUERY banned_vertices(5, "/home/tigergraph/mydata/payment_fraud/features/banned_vertices.csv")



